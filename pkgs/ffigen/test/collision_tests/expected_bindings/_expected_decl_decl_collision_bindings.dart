// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi$2;

class Bindings {
  /// Holds the symbol lookup function.
  final ffi$2.Pointer<T> Function<T extends ffi$2.NativeType>(String symbolName)
  _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Bindings(ffi$2.DynamicLibrary dynamicLibrary)
    : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Bindings.fromLookup(
    ffi$2.Pointer<T> Function<T extends ffi$2.NativeType>(String symbolName)
    lookup,
  ) : _lookup = lookup;

  void testFunc() {
    return _testFunc();
  }

  late final _testFuncPtr =
      _lookup<ffi$2.NativeFunction<ffi$2.Void Function()>>('testFunc');
  late final _testFunc = _testFuncPtr.asFunction<void Function()>();

  void testFunc$1() {
    return _testFunc$1();
  }

  late final _testFunc$1Ptr =
      _lookup<ffi$2.NativeFunction<ffi$2.Void Function()>>('testFunc');
  late final _testFunc$1 = _testFunc$1Ptr.asFunction<void Function()>();

  void testCrossDecl$1() {
    return _testCrossDecl$1();
  }

  late final _testCrossDecl$1Ptr =
      _lookup<ffi$2.NativeFunction<ffi$2.Void Function()>>('testCrossDecl');
  late final _testCrossDecl$1 = _testCrossDecl$1Ptr
      .asFunction<void Function()>();

  void ffi$1() {
    return _ffi$1();
  }

  late final _ffi$1Ptr = _lookup<ffi$2.NativeFunction<ffi$2.Void Function()>>(
    'ffi\$1',
  );
  late final _ffi$1 = _ffi$1Ptr.asFunction<void Function()>();
}

final class TestStruct extends ffi$2.Opaque {}

final class TestStruct$1 extends ffi$2.Opaque {}

sealed class TestEnum {}

sealed class TestEnum$1 {}

const int Test_Macro = 0;

const int Test_Macro$1 = 0;

typedef testAlias = ffi$2.Void;
typedef DarttestAlias = void;
typedef testAlias$1 = ffi$2.Void;
typedef DarttestAlias$1 = void;

final class testCrossDecl extends ffi$2.Opaque {}

const int testCrossDecl$2 = 0;

sealed class testCrossDecl$3 {}

typedef testCrossDecl$4 = ffi$2.Void;
typedef DarttestCrossDecl = void;

final class ffi extends ffi$2.Opaque {}
