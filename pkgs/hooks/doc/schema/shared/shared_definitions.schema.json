{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "package:hooks party:shared shared definitions",
  "definitions": {
    "Asset": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "encoding": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "required": [
        "type"
      ]
    },
    "BuildConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/Config"
        },
        {
          "properties": {
            "linking_enabled": {
              "type": "boolean"
            }
          },
          "required": [
            "linking_enabled"
          ]
        }
      ]
    },
    "BuildInput": {
      "properties": {
        "config": {
          "$ref": "#/definitions/BuildConfig"
        },
        "dependency_metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HookInput"
        }
      ]
    },
    "BuildOutput": {
      "type": "object",
      "properties": {
        "assetsForLinking": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "assets_for_linking": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Asset"
            }
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HookOutput"
        }
      ]
    },
    "Config": {
      "type": "object",
      "properties": {
        "build_asset_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "extensions": {
          "$ref": "#/definitions/ConfigExtensions"
        }
      },
      "required": [
        "build_asset_types"
      ]
    },
    "ConfigExtensions": {
      "type": "object",
      "additionalProperties": true
    },
    "HookInput": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/Config"
        },
        "out_dir": {
          "$ref": "#/definitions/absolutePath"
        },
        "out_dir_shared": {
          "$ref": "#/definitions/absolutePath"
        },
        "out_file": {
          "$ref": "#/definitions/absolutePath"
        },
        "package_name": {
          "type": "string"
        },
        "package_root": {
          "$ref": "#/definitions/absolutePath"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "config",
        "out_dir",
        "out_dir_shared",
        "package_name",
        "package_root"
      ]
    },
    "HookOutput": {
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/absolutePath"
          }
        },
        "timestamp": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "timestamp"
      ]
    },
    "LinkInput": {
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "resource_identifiers": {
          "$ref": "#/definitions/absolutePath"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/HookInput"
        }
      ]
    },
    "LinkOutput": {
      "allOf": [
        {
          "$ref": "#/definitions/HookOutput"
        }
      ]
    },
    "absolutePath": {
      "type": "string",
      "anyOf": [
        {
          "format": "uri"
        },
        {
          "pattern": "^(\\/|[A-Za-z]:)"
        }
      ]
    },
    "relativePath": {
      "$comment": "Dart Uris with a relative path serialize to a path with without a schema. format:uri must have a schema, so we can't use it here.",
      "type": "string",
      "pattern": "^([A-Za-z])"
    }
  }
}
