// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef AVFAUDIOWRAPPER_SWIFT_H
#define AVFAUDIOWRAPPER_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="AVFAudioWrapper",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC15AVFAudioWrapper22AVAUPresetEventWrapper")
@interface AVAUPresetEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper34AVAudio3DAngularOrientationWrapper")
@interface AVAudio3DAngularOrientationWrapper : NSObject
@property (nonatomic) float pitch;
@property (nonatomic) float roll;
@property (nonatomic) float yaw;
- (nonnull instancetype)initWithYaw:(float)yaw pitch:(float)pitch roll:(float)roll OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper21AVAudio3DPointWrapper")
@interface AVAudio3DPointWrapper : NSObject
@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) float z;
- (nonnull instancetype)initWithX:(float)x y:(float)y z:(float)z OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper33AVAudio3DVectorOrientationWrapper")
@interface AVAudio3DVectorOrientationWrapper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC15AVFAudioWrapper25AVAudioApplicationWrapper")
@interface AVAudioApplicationWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull muteStateKey;)
+ (NSString * _Nonnull)muteStateKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVAudioApplicationWrapper * _Nonnull shared;)
+ (AVAudioApplicationWrapper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isInputMuted;
- (BOOL)setInputMuted:(BOOL)muted error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioFormatWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioBufferWrapper")
@interface AVAudioBufferWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull format;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVAudioChannelLayoutWrapper")
@interface AVAudioChannelLayoutWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper30AVAudioCompressedBufferWrapper")
@interface AVAudioCompressedBufferWrapper : NSObject
@property (nonatomic, readonly) NSInteger maximumPacketSize;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioNodeWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper29AVAudioConnectionPointWrapper")
@interface AVAudioConnectionPointWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioNodeWrapper * _Nullable node;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper32AVAudioConverterPrimeInfoWrapper")
@interface AVAudioConverterPrimeInfoWrapper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioPCMBufferWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioConverterWrapper")
@interface AVAudioConverterWrapper : NSObject
@property (nonatomic) NSInteger bitRate;
@property (nonatomic, copy) NSString * _Nullable bitRateStrategy;
@property (nonatomic) BOOL dither;
@property (nonatomic) BOOL downmix;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull inputFormat;
@property (nonatomic, readonly) NSInteger maximumOutputPacketSize;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull outputFormat;
@property (nonatomic, strong) AVAudioConverterPrimeInfoWrapper * _Nonnull primeInfo;
@property (nonatomic, copy) NSString * _Nullable sampleRateConverterAlgorithm;
@property (nonatomic) NSInteger sampleRateConverterQuality;
- (nullable instancetype)initFrom:(AVAudioFormatWrapper * _Nonnull)fromFormat to:(AVAudioFormatWrapper * _Nonnull)toFormat OBJC_DESIGNATED_INITIALIZER;
- (BOOL)convertTo:(AVAudioPCMBufferWrapper * _Nonnull)outputBuffer from:(AVAudioPCMBufferWrapper * _Nonnull)inputBuffer error:(NSError * _Nullable * _Nullable)error;
- (void)reset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioInputNodeWrapper;
@class AVAudioMixerNodeWrapper;
@class AVAudioOutputNodeWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioEngineWrapper")
@interface AVAudioEngineWrapper : NSObject
@property (nonatomic) BOOL isAutoShutdownEnabled;
@property (nonatomic, readonly, strong) AVAudioInputNodeWrapper * _Nonnull inputNode;
@property (nonatomic, readonly) BOOL isInManualRenderingMode;
@property (nonatomic, readonly, strong) AVAudioMixerNodeWrapper * _Nonnull mainMixerNode;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull manualRenderingFormat;
@property (nonatomic, readonly, strong) AVAudioOutputNodeWrapper * _Nonnull outputNode;
@property (nonatomic, readonly) BOOL isRunning;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)attach:(AVAudioNodeWrapper * _Nonnull)node;
- (void)connect:(AVAudioNodeWrapper * _Nonnull)node1 to:(AVAudioNodeWrapper * _Nonnull)node2 format:(AVAudioFormatWrapper * _Nullable)format;
- (void)detach:(AVAudioNodeWrapper * _Nonnull)node;
- (void)disableManualRenderingMode;
- (void)disconnectMIDI:(AVAudioNodeWrapper * _Nonnull)sourceNode from:(AVAudioNodeWrapper * _Nonnull)destinationNode;
- (void)disconnectMIDIInput:(AVAudioNodeWrapper * _Nonnull)node;
- (void)disconnectMIDIOutput:(AVAudioNodeWrapper * _Nonnull)node;
- (void)disconnectNodeInput:(AVAudioNodeWrapper * _Nonnull)node;
- (void)disconnectNodeOutput:(AVAudioNodeWrapper * _Nonnull)node;
- (void)pause;
- (void)prepare;
- (void)reset;
- (BOOL)startAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)stop;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper54AVAudioEnvironmentDistanceAttenuationParametersWrapper")
@interface AVAudioEnvironmentDistanceAttenuationParametersWrapper : NSObject
@property (nonatomic) float maximumDistance;
@property (nonatomic) float referenceDistance;
@property (nonatomic) float rolloffFactor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioEnvironmentReverbParametersWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper29AVAudioEnvironmentNodeWrapper")
@interface AVAudioEnvironmentNodeWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioEnvironmentDistanceAttenuationParametersWrapper * _Nonnull distanceAttenuationParameters;
@property (nonatomic, strong) AVAudio3DAngularOrientationWrapper * _Nonnull listenerAngularOrientation;
@property (nonatomic, strong) AVAudio3DPointWrapper * _Nonnull listenerPosition;
@property (nonatomic, strong) AVAudio3DVectorOrientationWrapper * _Nonnull listenerVectorOrientation;
@property (nonatomic) float outputVolume;
@property (nonatomic, readonly, strong) AVAudioEnvironmentReverbParametersWrapper * _Nonnull reverbParameters;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVAudioUnitEQFilterParametersWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper41AVAudioEnvironmentReverbParametersWrapper")
@interface AVAudioEnvironmentReverbParametersWrapper : NSObject
@property (nonatomic) BOOL enable;
@property (nonatomic, readonly, strong) AVAudioUnitEQFilterParametersWrapper * _Nonnull filterParameters;
@property (nonatomic) float level;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURL;

SWIFT_CLASS("_TtC15AVFAudioWrapper18AVAudioFileWrapper")
@interface AVAudioFileWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull fileFormat;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull processingFormat;
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
- (nullable instancetype)initForReading:(NSURL * _Nonnull)fileURL error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (BOOL)readInto:(AVAudioPCMBufferWrapper * _Nonnull)buffer error:(NSError * _Nullable * _Nullable)error;
- (BOOL)writeFrom:(AVAudioPCMBufferWrapper * _Nonnull)buffer error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioFormatWrapper")
@interface AVAudioFormatWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioChannelLayoutWrapper * _Nullable channelLayout;
@property (nonatomic, readonly) BOOL isInterleaved;
@property (nonatomic, readonly) double sampleRate;
@property (nonatomic, readonly) BOOL isStandard;
- (nonnull instancetype)initWithStandardFormatWithSampleRate:(double)sampleRate channelLayout:(AVAudioChannelLayoutWrapper * _Nonnull)layout OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioIONodeWrapper")
@interface AVAudioIONodeWrapper : NSObject
@property (nonatomic, readonly) NSTimeInterval presentationLatency;
@property (nonatomic, readonly) BOOL isVoiceProcessingEnabled;
- (BOOL)setVoiceProcessingEnabled:(BOOL)enabled error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioVoiceProcessingOtherAudioDuckingConfigurationWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioInputNodeWrapper")
@interface AVAudioInputNodeWrapper : NSObject
@property (nonatomic) BOOL isVoiceProcessingAGCEnabled;
@property (nonatomic) BOOL isVoiceProcessingBypassed;
@property (nonatomic) BOOL isVoiceProcessingInputMuted;
@property (nonatomic, strong) AVAudioVoiceProcessingOtherAudioDuckingConfigurationWrapper * _Nonnull voiceProcessingOtherAudioDuckingConfiguration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioMixerNodeWrapper")
@interface AVAudioMixerNodeWrapper : NSObject
@property (nonatomic) float outputVolume;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper31AVAudioMixingDestinationWrapper")
@interface AVAudioMixingDestinationWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioConnectionPointWrapper * _Nonnull connectionPoint;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVAudioTimeWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper18AVAudioNodeWrapper")
@interface AVAudioNodeWrapper : NSObject
@property (nonatomic, readonly, strong) AVAudioEngineWrapper * _Nullable engine;
@property (nonatomic, readonly, strong) AVAudioTimeWrapper * _Nullable lastRenderTime;
@property (nonatomic, readonly) NSTimeInterval latency;
@property (nonatomic, readonly) NSInteger numberOfInputs;
@property (nonatomic, readonly) NSInteger numberOfOutputs;
@property (nonatomic, readonly) NSTimeInterval outputPresentationLatency;
- (void)reset;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVAudioOutputNodeWrapper")
@interface AVAudioOutputNodeWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioPCMBufferWrapper")
@interface AVAudioPCMBufferWrapper : NSObject
@property (nonatomic, readonly) NSInteger stride;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper37AVAudioPlayerNodeBufferOptionsWrapper")
@interface AVAudioPlayerNodeBufferOptionsWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull interrupts;)
+ (AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull)interrupts SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull interruptsAtLoop;)
+ (AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull)interruptsAtLoop SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull loops;)
+ (AVAudioPlayerNodeBufferOptionsWrapper * _Nonnull)loops SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isEmpty;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVAudioPlayerNodeWrapper")
@interface AVAudioPlayerNodeWrapper : NSObject
@property (nonatomic, readonly) BOOL isPlaying;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (AVAudioTimeWrapper * _Nullable)nodeTimeForPlayerTime:(AVAudioTimeWrapper * _Nonnull)playerTime SWIFT_WARN_UNUSED_RESULT;
- (void)pause;
- (void)play;
- (void)playAt:(AVAudioTimeWrapper * _Nullable)when;
- (AVAudioTimeWrapper * _Nullable)playerTimeForNodeTime:(AVAudioTimeWrapper * _Nonnull)nodeTime SWIFT_WARN_UNUSED_RESULT;
- (void)scheduleFile:(AVAudioFileWrapper * _Nonnull)file at:(AVAudioTimeWrapper * _Nullable)when;
- (void)stop;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioPlayerWrapper")
@interface AVAudioPlayerWrapper : NSObject
@property (nonatomic, copy) NSString * _Nullable currentDevice;
@property (nonatomic) NSTimeInterval currentTime;
@property (nonatomic, readonly) NSTimeInterval deviceCurrentTime;
@property (nonatomic, readonly) NSTimeInterval duration;
@property (nonatomic) BOOL enableRate;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull format;
@property (nonatomic) BOOL isMeteringEnabled;
@property (nonatomic, readonly) NSInteger numberOfChannels;
@property (nonatomic) NSInteger numberOfLoops;
@property (nonatomic) float pan;
@property (nonatomic, readonly) BOOL isPlaying;
@property (nonatomic) float rate;
@property (nonatomic, readonly, copy) NSURL * _Nullable url;
@property (nonatomic) float volume;
- (nullable instancetype)initWithContentsOf:(NSURL * _Nonnull)url error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithContentsOf:(NSURL * _Nonnull)url fileTypeHint:(NSString * _Nullable)utiString error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (float)averagePowerForChannel:(NSInteger)channelNumber SWIFT_WARN_UNUSED_RESULT;
- (void)pause;
- (float)peakPowerForChannel:(NSInteger)channelNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)play SWIFT_WARN_UNUSED_RESULT;
- (BOOL)playAtTime:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (BOOL)prepareToPlay SWIFT_WARN_UNUSED_RESULT;
- (void)setVolume:(float)volume fadeDuration:(NSTimeInterval)duration;
- (void)stop;
- (void)updateMeters;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper22AVAudioRecorderWrapper")
@interface AVAudioRecorderWrapper : NSObject
@property (nonatomic, readonly) NSTimeInterval currentTime;
@property (nonatomic, readonly) NSTimeInterval deviceCurrentTime;
@property (nonatomic, readonly, strong) AVAudioFormatWrapper * _Nonnull format;
@property (nonatomic) BOOL isMeteringEnabled;
@property (nonatomic, readonly) BOOL isRecording;
@property (nonatomic, readonly, copy) NSURL * _Nonnull url;
- (nullable instancetype)initWithUrl:(NSURL * _Nonnull)url format:(AVAudioFormatWrapper * _Nonnull)format error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (float)averagePowerForChannel:(NSInteger)channelNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)deleteRecording SWIFT_WARN_UNUSED_RESULT;
- (void)pause;
- (float)peakPowerForChannel:(NSInteger)channelNumber SWIFT_WARN_UNUSED_RESULT;
- (BOOL)prepareToRecord SWIFT_WARN_UNUSED_RESULT;
- (BOOL)record SWIFT_WARN_UNUSED_RESULT;
- (BOOL)recordAtTime:(NSTimeInterval)time SWIFT_WARN_UNUSED_RESULT;
- (BOOL)recordAtTime:(NSTimeInterval)time forDuration:(NSTimeInterval)duration SWIFT_WARN_UNUSED_RESULT;
- (BOOL)recordForDuration:(NSTimeInterval)duration SWIFT_WARN_UNUSED_RESULT;
- (void)stop;
- (void)updateMeters;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper28AVAudioRoutingArbiterWrapper")
@interface AVAudioRoutingArbiterWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVAudioRoutingArbiterWrapper * _Nonnull shared;)
+ (AVAudioRoutingArbiterWrapper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (void)leave;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVMusicTrackWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioSequencerWrapper")
@interface AVAudioSequencerWrapper : NSObject
@property (nonatomic) NSTimeInterval currentPositionInBeats;
@property (nonatomic) NSTimeInterval currentPositionInSeconds;
@property (nonatomic, readonly) BOOL isPlaying;
@property (nonatomic) float rate;
@property (nonatomic, readonly, strong) AVMusicTrackWrapper * _Nonnull tempoTrack;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithAudioEngine:(AVAudioEngineWrapper * _Nonnull)engine OBJC_DESIGNATED_INITIALIZER;
- (AVMusicTrackWrapper * _Nonnull)createAndAppendTrack SWIFT_WARN_UNUSED_RESULT;
- (void)prepareToPlay;
- (BOOL)removeTrack:(AVMusicTrackWrapper * _Nonnull)track SWIFT_WARN_UNUSED_RESULT;
- (void)reverseEvents;
- (BOOL)startAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)stop;
- (BOOL)writeTo:(NSURL * _Nonnull)fileURL smpteResolution:(NSInteger)resolution replaceExisting:(BOOL)replace error:(NSError * _Nullable * _Nullable)error;
@end


SWIFT_CLASS("_TtCC15AVFAudioWrapper23AVAudioSequencerWrapper24InfoDictionaryKeyWrapper")
@interface InfoDictionaryKeyWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull album;)
+ (InfoDictionaryKeyWrapper * _Nonnull)album SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull approximateDurationInSeconds;)
+ (InfoDictionaryKeyWrapper * _Nonnull)approximateDurationInSeconds SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull artist;)
+ (InfoDictionaryKeyWrapper * _Nonnull)artist SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull channelLayout;)
+ (InfoDictionaryKeyWrapper * _Nonnull)channelLayout SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull comments;)
+ (InfoDictionaryKeyWrapper * _Nonnull)comments SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull composer;)
+ (InfoDictionaryKeyWrapper * _Nonnull)composer SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull copyright;)
+ (InfoDictionaryKeyWrapper * _Nonnull)copyright SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull encodingApplication;)
+ (InfoDictionaryKeyWrapper * _Nonnull)encodingApplication SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull genre;)
+ (InfoDictionaryKeyWrapper * _Nonnull)genre SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull ISRC;)
+ (InfoDictionaryKeyWrapper * _Nonnull)ISRC SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull keySignature;)
+ (InfoDictionaryKeyWrapper * _Nonnull)keySignature SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull lyricist;)
+ (InfoDictionaryKeyWrapper * _Nonnull)lyricist SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull nominalBitRate;)
+ (InfoDictionaryKeyWrapper * _Nonnull)nominalBitRate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull recordedDate;)
+ (InfoDictionaryKeyWrapper * _Nonnull)recordedDate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull sourceBitDepth;)
+ (InfoDictionaryKeyWrapper * _Nonnull)sourceBitDepth SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull sourceEncoder;)
+ (InfoDictionaryKeyWrapper * _Nonnull)sourceEncoder SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull subTitle;)
+ (InfoDictionaryKeyWrapper * _Nonnull)subTitle SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull tempo;)
+ (InfoDictionaryKeyWrapper * _Nonnull)tempo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull timeSignature;)
+ (InfoDictionaryKeyWrapper * _Nonnull)timeSignature SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull title;)
+ (InfoDictionaryKeyWrapper * _Nonnull)title SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull trackNumber;)
+ (InfoDictionaryKeyWrapper * _Nonnull)trackNumber SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) InfoDictionaryKeyWrapper * _Nonnull year;)
+ (InfoDictionaryKeyWrapper * _Nonnull)year SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithRawValue:(NSString * _Nonnull)rawValue OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper38AVAudioSessionActivationOptionsWrapper")
@interface AVAudioSessionActivationOptionsWrapper : NSObject
@property (nonatomic, readonly) BOOL isEmpty;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper22AVAudioSinkNodeWrapper")
@interface AVAudioSinkNodeWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVAudioSourceNodeWrapper")
@interface AVAudioSourceNodeWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper18AVAudioTimeWrapper")
@interface AVAudioTimeWrapper : NSObject
@property (nonatomic, readonly) BOOL isHostTimeValid;
@property (nonatomic, readonly) double sampleRate;
@property (nonatomic, readonly) BOOL isSampleTimeValid;
- (AVAudioTimeWrapper * _Nullable)extrapolateTimeFromAnchor:(AVAudioTimeWrapper * _Nonnull)anchorTime SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper34AVAudioUnitComponentManagerWrapper")
@interface AVAudioUnitComponentManagerWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVAudioUnitComponentWrapper")
@interface AVAudioUnitComponentWrapper : NSObject
@property (nonatomic, readonly, copy) NSURL * _Nullable componentURL;
@property (nonatomic, readonly) BOOL hasCustomView;
@property (nonatomic, readonly) BOOL hasMIDIInput;
@property (nonatomic, readonly) BOOL hasMIDIOutput;
@property (nonatomic, readonly, copy) NSURL * _Nullable iconURL;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedTypeName;
@property (nonatomic, readonly, copy) NSString * _Nonnull manufacturerName;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) BOOL passesAUVal;
@property (nonatomic, readonly) BOOL isSandboxSafe;
@property (nonatomic, readonly, copy) NSString * _Nonnull typeName;
@property (nonatomic, readonly) NSInteger version;
@property (nonatomic, readonly, copy) NSString * _Nonnull versionString;
- (BOOL)supportsNumberInputChannels:(NSInteger)numInputChannels outputChannels:(NSInteger)numOutputChannels SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVAudioUnitDelayWrapper")
@interface AVAudioUnitDelayWrapper : NSObject
@property (nonatomic) NSTimeInterval delayTime;
@property (nonatomic) float feedback;
@property (nonatomic) float lowPassCutoff;
@property (nonatomic) float wetDryMix;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper28AVAudioUnitDistortionWrapper")
@interface AVAudioUnitDistortionWrapper : NSObject
@property (nonatomic) float preGain;
@property (nonatomic) float wetDryMix;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper36AVAudioUnitEQFilterParametersWrapper")
@interface AVAudioUnitEQFilterParametersWrapper : NSObject
@property (nonatomic) float bandwidth;
@property (nonatomic) BOOL bypass;
@property (nonatomic) float frequency;
@property (nonatomic) float gain;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper20AVAudioUnitEQWrapper")
@interface AVAudioUnitEQWrapper : NSObject
@property (nonatomic) float globalGain;
- (nonnull instancetype)initWithNumberOfBands:(NSInteger)numberOfBands OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVAudioUnitEffectWrapper")
@interface AVAudioUnitEffectWrapper : NSObject
@property (nonatomic) BOOL bypass;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVAudioUnitGeneratorWrapper")
@interface AVAudioUnitGeneratorWrapper : NSObject
@property (nonatomic) BOOL bypass;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper32AVAudioUnitMIDIInstrumentWrapper")
@interface AVAudioUnitMIDIInstrumentWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVAudioUnitReverbWrapper")
@interface AVAudioUnitReverbWrapper : NSObject
@property (nonatomic) float wetDryMix;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper25AVAudioUnitSamplerWrapper")
@interface AVAudioUnitSamplerWrapper : NSObject
@property (nonatomic) float globalTuning;
@property (nonatomic) float masterGain;
@property (nonatomic) float overallGain;
@property (nonatomic) float stereoPan;
- (BOOL)loadInstrumentAt:(NSURL * _Nonnull)instrumentURL error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper28AVAudioUnitTimeEffectWrapper")
@interface AVAudioUnitTimeEffectWrapper : NSObject
@property (nonatomic) BOOL bypass;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVAudioUnitTimePitchWrapper")
@interface AVAudioUnitTimePitchWrapper : NSObject
@property (nonatomic) float overlap;
@property (nonatomic) float pitch;
@property (nonatomic) float rate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVAudioUnitVarispeedWrapper")
@interface AVAudioUnitVarispeedWrapper : NSObject
@property (nonatomic) float rate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper18AVAudioUnitWrapper")
@interface AVAudioUnitWrapper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull manufacturerName;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly) NSInteger version;
- (BOOL)loadPresetAt:(NSURL * _Nonnull)url error:(NSError * _Nullable * _Nullable)error;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper59AVAudioVoiceProcessingOtherAudioDuckingConfigurationWrapper")
@interface AVAudioVoiceProcessingOtherAudioDuckingConfigurationWrapper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper28AVExtendedNoteOnEventWrapper")
@interface AVExtendedNoteOnEventWrapper : NSObject
@property (nonatomic) float midiNote;
@property (nonatomic) float velocity;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVExtendedTempoEventWrapper")
@interface AVExtendedTempoEventWrapper : NSObject
@property (nonatomic) double tempo;
- (nonnull instancetype)initWithTempo:(double)tempo OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper25AVMIDIChannelEventWrapper")
@interface AVMIDIChannelEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper33AVMIDIChannelPressureEventWrapper")
@interface AVMIDIChannelPressureEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper31AVMIDIControlChangeEventWrapper")
@interface AVMIDIControlChangeEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper22AVMIDIMetaEventWrapper")
@interface AVMIDIMetaEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper22AVMIDINoteEventWrapper")
@interface AVMIDINoteEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper27AVMIDIPitchBendEventWrapper")
@interface AVMIDIPitchBendEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper19AVMIDIPlayerWrapper")
@interface AVMIDIPlayerWrapper : NSObject
@property (nonatomic) NSTimeInterval currentPosition;
@property (nonatomic, readonly) NSTimeInterval duration;
@property (nonatomic, readonly) BOOL isPlaying;
@property (nonatomic) float rate;
- (nullable instancetype)initWithContentsOf:(NSURL * _Nonnull)inURL soundBankURL:(NSURL * _Nullable)bankURL error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (void)prepareToPlay;
- (void)stop;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper30AVMIDIPolyPressureEventWrapper")
@interface AVMIDIPolyPressureEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper31AVMIDIProgramChangeEventWrapper")
@interface AVMIDIProgramChangeEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVMIDISysexEventWrapper")
@interface AVMIDISysexEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper19AVMusicEventWrapper")
@interface AVMusicEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper33AVMusicSequenceLoadOptionsWrapper")
@interface AVMusicSequenceLoadOptionsWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AVMusicSequenceLoadOptionsWrapper * _Nonnull smf_ChannelsToTracks;)
+ (AVMusicSequenceLoadOptionsWrapper * _Nonnull)smf_ChannelsToTracks SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isEmpty;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper19AVMusicTrackWrapper")
@interface AVMusicTrackWrapper : NSObject
@property (nonatomic, strong) AVAudioUnitWrapper * _Nullable destinationAudioUnit;
@property (nonatomic) NSTimeInterval lengthInSeconds;
@property (nonatomic) BOOL isLoopingEnabled;
@property (nonatomic) BOOL isMuted;
@property (nonatomic) NSInteger numberOfLoops;
@property (nonatomic) BOOL isSoloed;
@property (nonatomic, readonly) NSInteger timeResolution;
@property (nonatomic) BOOL usesAutomatedParameters;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVMusicUserEventWrapper")
@interface AVMusicUserEventWrapper : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper23AVParameterEventWrapper")
@interface AVParameterEventWrapper : NSObject
@property (nonatomic) float value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper30AVSpeechSynthesisMarkerWrapper")
@interface AVSpeechSynthesisMarkerWrapper : NSObject
@property (nonatomic, copy) NSString * _Nonnull bookmarkName;
@property (nonatomic) NSInteger byteSampleOffset;
@property (nonatomic, copy) NSString * _Nonnull phoneme;
- (nonnull instancetype)initWithBookmarkName:(NSString * _Nonnull)mark atByteSampleOffset:(NSInteger)byteSampleOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPhonemeString:(NSString * _Nonnull)phoneme atByteSampleOffset:(NSInteger)byteSampleOffset OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVSpeechSynthesisProviderRequestWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper41AVSpeechSynthesisProviderAudioUnitWrapper")
@interface AVSpeechSynthesisProviderAudioUnitWrapper : NSObject
- (void)cancelSpeechRequest;
- (void)synthesizeSpeechRequest:(AVSpeechSynthesisProviderRequestWrapper * _Nonnull)speechRequest;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVSpeechSynthesisProviderVoiceWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper39AVSpeechSynthesisProviderRequestWrapper")
@interface AVSpeechSynthesisProviderRequestWrapper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull ssmlRepresentation;
@property (nonatomic, readonly, strong) AVSpeechSynthesisProviderVoiceWrapper * _Nonnull voice;
- (nonnull instancetype)initWithSsmlRepresentation:(NSString * _Nonnull)text voice:(AVSpeechSynthesisProviderVoiceWrapper * _Nonnull)voice OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper37AVSpeechSynthesisProviderVoiceWrapper")
@interface AVSpeechSynthesisProviderVoiceWrapper : NSObject
@property (nonatomic) NSInteger age;
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull version;
+ (void)updateSpeechVoices;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TraitsWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper29AVSpeechSynthesisVoiceWrapper")
@interface AVSpeechSynthesisVoiceWrapper : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull identifier;
@property (nonatomic, readonly, copy) NSString * _Nonnull language;
@property (nonatomic, readonly, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, strong) TraitsWrapper * _Nonnull voiceTraits;
- (nullable instancetype)initWithIdentifier:(NSString * _Nonnull)identifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithLanguage:(NSString * _Nullable)languageCode OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)currentLanguageCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC15AVFAudioWrapper29AVSpeechSynthesisVoiceWrapper13TraitsWrapper")
@interface TraitsWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TraitsWrapper * _Nonnull isNoveltyVoice;)
+ (TraitsWrapper * _Nonnull)isNoveltyVoice SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) TraitsWrapper * _Nonnull isPersonalVoice;)
+ (TraitsWrapper * _Nonnull)isPersonalVoice SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isEmpty;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVSpeechUtteranceWrapper;

SWIFT_CLASS("_TtC15AVFAudioWrapper26AVSpeechSynthesizerWrapper")
@interface AVSpeechSynthesizerWrapper : NSObject
@property (nonatomic, readonly) BOOL isPaused;
@property (nonatomic, readonly) BOOL isSpeaking;
- (BOOL)continueSpeaking SWIFT_WARN_UNUSED_RESULT;
- (void)speak:(AVSpeechUtteranceWrapper * _Nonnull)utterance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper24AVSpeechUtteranceWrapper")
@interface AVSpeechUtteranceWrapper : NSObject
@property (nonatomic) float pitchMultiplier;
@property (nonatomic) NSTimeInterval postUtteranceDelay;
@property (nonatomic) NSTimeInterval preUtteranceDelay;
@property (nonatomic) BOOL prefersAssistiveTechnologySettings;
@property (nonatomic) float rate;
@property (nonatomic, readonly, copy) NSString * _Nonnull speechString;
@property (nonatomic, strong) AVSpeechSynthesisVoiceWrapper * _Nullable voice;
@property (nonatomic) float volume;
- (nullable instancetype)initWithSsmlRepresentation:(NSString * _Nonnull)string OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)string OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15AVFAudioWrapper14GlobalsWrapper")
@interface GlobalsWrapper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioBitRateStrategy_ConstantWrapper;)
+ (NSString * _Nonnull)AVAudioBitRateStrategy_ConstantWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioBitRateStrategy_LongTermAverageWrapper;)
+ (NSString * _Nonnull)AVAudioBitRateStrategy_LongTermAverageWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioBitRateStrategy_VariableWrapper;)
+ (NSString * _Nonnull)AVAudioBitRateStrategy_VariableWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioBitRateStrategy_VariableConstrainedWrapper;)
+ (NSString * _Nonnull)AVAudioBitRateStrategy_VariableConstrainedWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioFileTypeKeyWrapper;)
+ (NSString * _Nonnull)AVAudioFileTypeKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioSessionInterruptionWasSuspendedKeyWrapper;)
+ (NSString * _Nonnull)AVAudioSessionInterruptionWasSuspendedKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitManufacturerNameAppleWrapper;)
+ (NSString * _Nonnull)AVAudioUnitManufacturerNameAppleWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeEffectWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeEffectWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeFormatConverterWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeFormatConverterWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeGeneratorWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeGeneratorWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeMIDIProcessorWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeMIDIProcessorWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeMixerWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeMixerWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeMusicDeviceWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeMusicDeviceWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeMusicEffectWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeMusicEffectWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeOfflineEffectWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeOfflineEffectWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypeOutputWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypeOutputWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVAudioUnitTypePannerWrapper;)
+ (NSString * _Nonnull)AVAudioUnitTypePannerWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVChannelLayoutKeyWrapper;)
+ (NSString * _Nonnull)AVChannelLayoutKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderAudioQualityForVBRKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderAudioQualityForVBRKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderAudioQualityKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderAudioQualityKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderBitDepthHintKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderBitDepthHintKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderBitRateKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderBitRateKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderBitRatePerChannelKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderBitRatePerChannelKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVEncoderBitRateStrategyKeyWrapper;)
+ (NSString * _Nonnull)AVEncoderBitRateStrategyKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVFormatIDKeyWrapper;)
+ (NSString * _Nonnull)AVFormatIDKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVLinearPCMBitDepthKeyWrapper;)
+ (NSString * _Nonnull)AVLinearPCMBitDepthKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVLinearPCMIsBigEndianKeyWrapper;)
+ (NSString * _Nonnull)AVLinearPCMIsBigEndianKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVLinearPCMIsFloatKeyWrapper;)
+ (NSString * _Nonnull)AVLinearPCMIsFloatKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVLinearPCMIsNonInterleavedWrapper;)
+ (NSString * _Nonnull)AVLinearPCMIsNonInterleavedWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVNumberOfChannelsKeyWrapper;)
+ (NSString * _Nonnull)AVNumberOfChannelsKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateConverterAlgorithmKeyWrapper;)
+ (NSString * _Nonnull)AVSampleRateConverterAlgorithmKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateConverterAlgorithm_MasteringWrapper;)
+ (NSString * _Nonnull)AVSampleRateConverterAlgorithm_MasteringWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateConverterAlgorithm_MinimumPhaseWrapper;)
+ (NSString * _Nonnull)AVSampleRateConverterAlgorithm_MinimumPhaseWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateConverterAlgorithm_NormalWrapper;)
+ (NSString * _Nonnull)AVSampleRateConverterAlgorithm_NormalWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateConverterAudioQualityKeyWrapper;)
+ (NSString * _Nonnull)AVSampleRateConverterAudioQualityKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSampleRateKeyWrapper;)
+ (NSString * _Nonnull)AVSampleRateKeyWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSpeechSynthesisIPANotationAttributeWrapper;)
+ (NSString * _Nonnull)AVSpeechSynthesisIPANotationAttributeWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AVSpeechSynthesisVoiceIdentifierAlexWrapper;)
+ (NSString * _Nonnull)AVSpeechSynthesisVoiceIdentifierAlexWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) float AVSpeechUtteranceDefaultSpeechRateWrapper;)
+ (float)AVSpeechUtteranceDefaultSpeechRateWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) float AVSpeechUtteranceMaximumSpeechRateWrapper;)
+ (float)AVSpeechUtteranceMaximumSpeechRateWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) float AVSpeechUtteranceMinimumSpeechRateWrapper;)
+ (float)AVSpeechUtteranceMinimumSpeechRateWrapper SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) double AVMusicTimeStampEndOfTrackWrapper;)
+ (double)AVMusicTimeStampEndOfTrackWrapper SWIFT_WARN_UNUSED_RESULT;
+ (AVAudio3DAngularOrientationWrapper * _Nonnull)AVAudioMake3DAngularOrientationWrapper:(float)yaw :(float)pitch :(float)roll SWIFT_WARN_UNUSED_RESULT;
+ (AVAudio3DPointWrapper * _Nonnull)AVAudioMake3DPointWrapper:(float)x :(float)y :(float)z SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif
